<?xml version="1.0" encoding="UTF-8"?>
<!-- Schema 추가 -->
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.acadmi.lecture.LectureDAO">
	  <sql id="lectureCondition">
	  	<trim prefix="WHERE" prefixOverrides="AND">
	  		<if test="temporary!=null">
	  			TEMPORARY = #{temporary}
	  		</if>
	  		<if test="year==null and semester==null and username!=null">
	  			AND USERNAME=#{username}AND STATUS=1 AND YEAR=DATE_FORMAT(now(),'%Y') AND 
	  			SEMESTER = CASE
	    		WHEN MONTH(NOW()) BETWEEN 3 AND 8 THEN 1
	    		ELSE 2
				END
	  		</if>
	  		<if test="year!=null and semester!=null">
	  			AND USERNAME=#{username} AND YEAR=#{year} AND SEMESTER=#{semester} AND STATUS=1 AND TEMPORARY=1
	  		</if>
	  		</trim>
	  </sql>
	  <sql id="attendeeCondition">
			<if test="kind=='userName'">
				AND S.USERNAME LIKE CONCAT('%', #{search}, '%')
			</if>
			<if test="kind=='name'">
				AND NAME LIKE CONCAT('%', #{search}, '%')
			</if>
	  </sql>
 
 	<!--  홈페이지 강의 목록 -->
 	<select id="getHomeLectureList" parameterType="LectureVO" resultType="LectureVO">
 		SELECT * FROM LECTURE WHERE YEAR=DATE_FORMAT(now(),'%Y') AND USERNAME=#{username} AND STATUS=1 AND TEMPORARY=1 AND
 		SEMESTER = CASE
    	WHEN MONTH(NOW()) BETWEEN 3 AND 8 THEN 1
    	ELSE 2
		END;
 	</select>
  
  	<!-- 강의 목록 및 상태 구분 -->
  	<select id="getLectureList" parameterType="Pagination" resultType="LectureVO">
  		SELECT * FROM LECTURE <include refid="lectureCondition"></include>
  	</select>
  	
  	<!-- 강의 정보 -->
  	<select id="getLectureDetail" parameterType="LectureVO" resultMap="LectureResult">
  		SELECT * FROM LECTURE L INNER JOIN DEPARTMENT D ON(L.DEPTNUM=D.DEPTNUM) WHERE LECTURENUM=#{lectureNum}
  	</select>

	<!-- 단과대학 목록 - 행정제외 -->
	<select id="getCollegeList" parameterType="CollegeVO" resultType="CollegeVO">
		SELECT * FROM COLLEGE WHERE COLLEGENUM>1
	</select>
	
	<!-- 학과 목록 - 행정제외 -->
	<select id="getDepartmentList" parameterType="DepartmentVO" resultType="DepartmentVO">
		SELECT * FROM DEPARTMENT
	</select>
	
	<!-- 년도 목록 -->
	<select id="getSemesterList" parameterType="PeriodVO" resultType="PeriodVO">
		SELECT DISTINCT(YEAR) FROM PERIOD
	</select>
	
	<!-- 강의 insert -->
  	<insert id="setLectureAdd" parameterType="LectureVO" useGeneratedKeys="true" keyProperty="lectureNum">
  		INSERT INTO LECTURE (USERNAME,LECTURENAME,SEMESTER,CATEGORY,DEPTNUM,GRADE,SUBSCRIPTION,
  		YEAR,WEEKDAY, STARTTIME, ENDTIME, PERSONAL, COMPLETIONGRADE,STATUS,TEMPORARY)
  		VALUES (#{username},#{lectureName},#{semester},#{category},#{deptNum},#{grade},0,#{year},#{weekday},
  		#{startTime},#{endTime},#{personal},#{completionGrade},1,1)
  	</insert>
  	<insert id="setTemporaryAdd" parameterType="LectureVO" useGeneratedKeys="true" keyProperty="lectureNum">
  		INSERT INTO LECTURE (USERNAME,LECTURENAME,SEMESTER,CATEGORY,DEPTNUM,GRADE,SUBSCRIPTION,
  		YEAR,WEEKDAY, STARTTIME, ENDTIME, PERSONAL, COMPLETIONGRADE,STATUS,TEMPORARY)
  		VALUES (#{username},#{lectureName},#{semester},#{category},#{deptNum},#{grade},0,#{year},#{weekday},
  		#{startTime},#{endTime},#{personal},#{completionGrade},1,0)
  	</insert>
  
  	<!-- 강의 update -->
  	<update id="setLectureUpdate" parameterType="LectureVO">
 		UPDATE LECTURE SET SEMESTER=#{semester}, DEPTNUM=#{deptNum},LECTURENAME=#{lectureName},CATEGORY=#{category},
 		GRADE= #{grade},YEAR=#{year}, WEEKDAY=#{weekday},STARTTIME=#{startTime},ENDTIME=#{endTime},PERSONAL=#{personal},
 		COMPLETIONGRADE=#{completionGrade},TEMPORARY=1 WHERE LECTURENUM=#{lectureNum}
 	</update>
 	<update id="setTemporaryUpdate" parameterType="LectureVO">
 		UPDATE LECTURE SET SEMESTER=#{semester}, DEPTNUM=#{deptNum},LECTURENAME=#{lectureName},CATEGORY=#{category},
 		GRADE= #{grade},YEAR=#{year}, WEEKDAY=#{weekday},STARTTIME=#{startTime},ENDTIME=#{endTime},PERSONAL=#{personal},
 		COMPLETIONGRADE=#{completionGrade}, TEMPORARY=0 WHERE LECTURENUM=#{lectureNum}
 	</update>

	<!-- 강의 delete -->
 	<delete id="setLectureDelete" parameterType="LectureVO">
 		DELETE FROM LECTURE WHERE LECTURENUM=#{lectureNum}
 	</delete>
 	
 	<!-- 단과대학 정보 -->
	<select id="getCollege" parameterType="Integer" resultType="CollegeVO">
		SELECT * FROM COLLEGE WHERE COLLEGENUM =(SELECT COLLEGENUM  FROM DEPARTMENT WHERE DEPTNUM=#{deptNum})
	</select>
 	
 	<!-- 교수 정보 -->
 	<select id="getLectureProfessor" parameterType="LectureVO" resultMap="LectureResult">
  		SELECT * FROM `MEMBER` M INNER JOIN PROFESSOR P ON (M.USERNAME=P.USERNAME) 
		INNER JOIN LECTURE L ON (P.USERNAME=L.USERNAME) WHERE LECTURENUM=#{lectureNum}
  	</select>
  	
  	<!-- 참여자 정보 -->
  	<select id="getTotalAttendee" parameterType="Pagination" resultType="Long">
  		SELECT COUNT(USERNAME) FROM STUDENT S INNER JOIN STUDENT_LECTURE SL USING(USERNAME) 
  		WHERE LECTURENUM=#{lectureNum}<include refid="attendeeCondition"></include>
  	</select>
  	<select id="getLectureAttendee" parameterType="Pagination" resultMap="StudentResult">
  		SELECT S.*,M.EMAIL,MF.*,D.DEPTNAME FROM `MEMBER` M LEFT OUTER JOIN MEMBERFILES MF ON(M.USERNAME=MF.USERNAME) 
  		INNER JOIN STUDENT S ON (M.USERNAME=S.USERNAME) INNER JOIN STUDENT_LECTURE SL ON (M.USERNAME=SL.USERNAME) 
  		INNER JOIN DEPARTMENT D ON(S.DEPTNUM=D.DEPTNUM) WHERE LECTURENUM=#{lectureNum} 
  		<include refid="attendeeCondition"></include>  LIMIT #{startRow}, #{perPage}
  	</select>

  	
  	<!-- 계획서 존재 여부 -->
  	<select id="getSyllabusExists" parameterType="LectureVO" resultType="Integer">
  		SELECT COUNT(S.SYLLABUSNUM) FROM SYLLABUS S WHERE LECTURENUM=#{lectureNum}
  	</select>
  	
  	<!-- 계획서 정보 -->
  	<select id="getSyllabusDetail" parameterType="LectureVO" resultMap="LectureResult">
  		SELECT * FROM SYLLABUS S INNER JOIN LECTURE L ON(S.LECTURENUM=L.LECTURENUM) 
  		INNER JOIN PROFESSOR P ON(L.USERNAME=P.USERNAME)INNER JOIN MEMBER M ON(M.USERNAME=P.USERNAME)
  		INNER JOIN DEPARTMENT D ON(L.DEPTNUM=D.DEPTNUM) WHERE S.LECTURENUM=#{lectureNum}
  	</select>
  	
  	<!-- 계획서 차수 정보 -->
  	<select id="getSyllabusClass" parameterType="LectureVO" resultType="ClassVO">
  		 SELECT C.* FROM SYLLABUS S INNER JOIN CLASS C ON(S.SYLLABUSNUM=C.SYLLABUSNUM) 
  		 INNER JOIN LECTURE L ON(S.LECTURENUM=L.LECTURENUM) WHERE S.LECTURENUM=#{lectureNum}
  	</select>
  	
  	<!-- 계획서 insert -->
  	<insert id="setSyllabusAdd" parameterType="SyllabusVO"  useGeneratedKeys="true" keyProperty="syllabusNum">
  		INSERT INTO SYLLABUS (LECTURENUM, CURRICULUMOUTLINE, GOAL, EVALUATION, METHOD, BOOKNAME, 
  		BOOKAUTHOR, BOOKPUBLISHER, BOOKPUBLICATIONDATE, BOOKISBN, BOOKNOTE) VALUES (#{lectureNum},#{curriculumOutline},
  		 #{goal},#{evaluation},#{method},#{bookName},#{bookAuthor},#{bookPublisher},#{bookPublicationDate},
  		  #{bookISBN},#{bookNote})
  	</insert>
  	
  	<!-- 계획서 차수 insert -->
  	<insert id="setClassAdd" parameterType="ClassVO">
  		INSERT INTO CLASS 
  		VALUES (#{syllabusNum},#{order},#{lectureNum},#{subject},#{goal},
  		#{capability},#{note})
  	</insert>
  	
  	<!-- 계획서 update -->
  	<update id="setSyllabusUpdate" parameterType="SyllabusVO">
  		UPDATE SYLLABUS SET CURRICULUMOUTLINE=#{curriculumOutline},GOAL=#{goal},EVALUATION=#{evaluation},METHOD=#{method},
  		BOOKNAME=#{bookName},BOOKAUTHOR=#{bookAuthor},BOOKPUBLISHER=#{bookPublisher},BOOKPUBLICATIONDATE=#{bookPublicationDate},
  		BOOKISBN=#{bookISBN},BOOKNOTE=#{bookNote} WHERE LECTURENUM=#{lectureNum}
  	</update>
  	
  	<!-- 계획서 차수 update -->
  	<update id="setClassUpdate" parameterType="ClassVO">
  		UPDATE CLASS SET SUBJECT=#{subject},GOAL=#{goal},CAPABILITY=#{capability},NOTE=#{note} 
  		WHERE SYLLABUSNUM=#{syllabusNum} AND `ORDER`=#{order}
  	</update>
  	
  	<resultMap type="LectureVO" id="LectureResult">
  		<id column="LECTURENUM" property="lectureNum"/>
  		<result column="LECTURENAME" property="lectureName"/>
  		<result column="SEMESTER" property="semester"/>
  		<result column="CATEGORY" property="category"/>
  		<result column="LECTUREBUILDING" property="lectureBuilding"/>
  		<result column="LECTUREROOM" property="lectureRoom"/>
  		<result column="DEPTNUM" property="deptNum"/>
  		<result column="GRADE" property="grade"/>
  		<result column="SUBSCRIPTION" property="subscription"/>
  		<result column="PERSONAL" property="personal"/>
  		<result column="YEAR" property="year"/>
  		<result column="WEEKDAY" property="weekday"/>
  		<result column="STARTTIME" property="startTime"/>
  		<result column="ENDTIME" property="endTime"/>
  		<result column="COMPLETIONGRADE" property="completionGrade"/>
  		<result column="STATUS" property="status"/>
  		<result column="TEMPORARY" property="temporary"/>
  		<result column="USERNAME" property="username"/>
  		<association property="syllabusVO" javaType="SyllabusVO">
  			<id column="SYLLABUSNUM" property="syllabusNum"/>
  			<result column="LECTURENUM" property="lectureNum"/>
  			<result column="CURRICULUMOUTLINE" property="curriculumOutline"/>
  			<result column="GOAL" property="goal"/>
  			<result column="EVALUATION" property="evaluation"/>
  			<result column="METHOD" property="method"/>
  			<result column="BOOKNAME" property="bookName"/>
  			<result column="BOOKAUTHOR" property="bookAuthor"/>
  			<result column="BOOKPUBLISHER" property="bookPublisher"/>
  			<result column="BOOKPUBLICATIONDATE" property="bookPublicationDate"/>
  			<result column="BOOKISBN" property="bookISBN"/>
  			<result column="BOOKNOTE" property="bookNote"/>
  		</association>
  		<collection property="professorVO" javaType="ProfessorVO">
  			<id column="USERNAME" property="username"/>
  			<result column="DEPTNUM" property="deptNum"/>
  			<result column="NAME" property="name"/>
  			<result column="PROFESSORROOM" property="professorRoom"/>
  			<result column="PHONE" property="phone"/>
  			<result column="BIRTH" property="birth"/>
  			<result column="ADDRESS" property="address"/>
  			<result column="STATUS" property="status"/>
  			<result column="EMAIL" property="email"/>
  		</collection>
  		<collection property="departmentVO" javaType="DepartmentVO">
  			<id column="DEPTNUM" property="deptNum"/>
  			<result column="DEPTNAME" property="deptName"/>
  		</collection>
  		
  	</resultMap>
  	
  	<resultMap type="SyllabusVO" id="SyllabusResult">
  		<id column="SYLLABUSNUM" property="syllabusNum"/>
  			<result column="LECTURENUM" property="lectureNum"/>
  			<result column="CURRICULUMOUTLINE" property="curriculumOutline"/>
  			<result column="GOAL" property="goal"/>
  			<result column="EVALUATION" property="evaluation"/>
  			<result column="METHOD" property="method"/>
  			<result column="BOOKNAME" property="bookName"/>
  			<result column="BOOKAUTHOR" property="bookAuthor"/>
  			<result column="BOOKPUBLISHER" property="bookPublisher"/>
  			<result column="BOOKPUBLICATIONDATE" property="bookPublicationDate"/>
  			<result column="BOOKISBN" property="bookISBN"/>
  			<result column="BOOKNOTE" property="bookNote"/>
  			<collection property="classVOs" javaType="List" ofType="ClassVO">
  				<id column="SYLLABUSNUM" property="syllabusNum"/>
  				<result column="ORDER" property="order"/>
  				<result column="LECTURENUM" property="lectureNum"/>
  				<result column="SUBJECT" property="subject"/>
  				<result column="GOAL" property="goal"/>
  				<result column="CAPABILITY" property="capability"/>
  				<result column="NOTE" property="note"/>
  			</collection>
  	</resultMap>
  	
  	<resultMap type="StudentVO" id="StudentResult">
  		<id column="USERNAME" property="username"/>
  		<result column="DEPTNUM" property="deptNum" />
  		<result column="GRADE" property="grade" />
  		<result column="NAME" property="name" />
  		<result column="PHONE" property="phone" />
  		<result column="BIRTH" property="birth" />
  		<result column="ADDRESS" property="address" />
  		<result column="STATUS" property="status" />
  		<result column="EMAIL" property="email"/>
  		<association property="memberFilesVO" javaType="MemberFilesVO">
			<id column="FILENUM" property="fileNum"/>
			<result column="FILENAME" property="fileName"/>
		</association>
  		<association property="departmentVO" javaType="DepartmentVO">
  			<id column="DEPTNUM" property="deptNum"/>
  			<result column="DEPTNAME" property="deptName"/>
  		</association>
  	</resultMap>
  	
	</mapper>